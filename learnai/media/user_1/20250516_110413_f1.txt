import { useParams } from "react-router-dom";
import { ArrowLeft, Sparkles, BookOpen, FileText, FileQuestion } from "lucide-react";
import Layout from "./Layout";

export default function ContentDetail() {
  const { id, type } = useParams();
  const contentTypes = {
    summary: {
      title: "Summary",
      icon: Sparkles,
      color: "bg-purple-100 text-purple-600",
      description: "Concise overview of key points"
    },
    notes: {
      title: "Study Notes",
      icon: BookOpen,
      color: "bg-blue-100 text-blue-600",
      description: "Organized notes with explanations"
    },
    flashcards: {
      title: "Flashcards",
      icon: FileText,
      color: "bg-green-100 text-green-600",
      description: "Question-answer pairs for memorization"
    },
    quiz: {
      title: "Practice Quiz",
      icon: FileQuestion,
      color: "bg-yellow-100 text-yellow-600",
      description: "Test your understanding"
    }
  };

  const currentType = contentTypes[type] || contentTypes.summary;

  return (
    <Layout>
      <div className="p-8">
        <div className="flex items-center mb-6">
          <button 
            onClick={() => window.history.back()}
            className="flex items-center text-indigo-600 hover:text-indigo-800 mr-4"
          >
            <ArrowLeft className="w-5 h-5 mr-2" />
            Back
          </button>
          <div className={`flex items-center px-4 py-2 rounded-full ${currentType.color}`}>
            <currentType.icon className="w-5 h-5 mr-2" />
            <span className="font-medium">{currentType.title}</span>
          </div>
        </div>

        <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
          <div className="flex flex-col items-center justify-center py-12">
            <div className={`p-4 rounded-full ${currentType.color} mb-4`}>
              <currentType.icon className="w-8 h-8" />
            </div>
            <h2 className="text-2xl font-bold text-gray-800 mb-2">
              {currentType.title} (Placeholder)
            </h2>
            <p className="text-gray-500 mb-6">{currentType.description}</p>
            <p className="text-gray-400 text-center max-w-md">
              In a real implementation, this would show the AI-generated {type} for material ID: {id}.
              The content would be fetched from your backend API.
            </p>
          </div>
        </div>
      </div>
    </Layout>
  );
}




/////
import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { FileText, BookOpen, FileQuestion, Sparkles, Loader2 } from "lucide-react";
import Layout from "./Layout";
import { getStudyMaterials } from "../api/api.jsx";

export default function GeneratedContent() {
  const [materials, setMaterials] = useState([]);
  const [loading, setLoading] = useState(true);
  const [selectedMaterial, setSelectedMaterial] = useState(null);
  const navigate = useNavigate();

  useEffect(() => {
    const fetchMaterials = async () => {
      try {
        const response = await getStudyMaterials();
        setMaterials(response.data);
      } catch (error) {
        console.error("Error fetching materials:", error);
      } finally {
        setLoading(false);
      }
    };
    
    fetchMaterials();
  }, []);

  const generateContent = (type) => {
    if (!selectedMaterial) return;
    // In a real app, this would call your AI service
    // For now, we'll navigate to a placeholder page
    navigate(`/content/${selectedMaterial.id}/${type}`);
  };

  if (loading) {
    return (
      <Layout>
        <div className="p-8">
          <div className="flex justify-center items-center h-64">
            <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500"></div>
          </div>
        </div>
      </Layout>
    );
  }

  return (
    <Layout>
      <div className="p-8">
        <h1 className="text-3xl font-bold text-gray-800 mb-6">Generate Content</h1>
        
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Materials List */}
          <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
            <h2 className="text-xl font-semibold text-gray-800 mb-4">Your Study Materials</h2>
            {materials.length === 0 ? (
              <div className="text-center py-12 text-gray-500">
                You haven't uploaded any materials yet.
              </div>
            ) : (
              <div className="space-y-3">
                {materials.map((material) => (
                  <div
                    key={material.id}
                    onClick={() => setSelectedMaterial(material)}
                    className={`p-3 rounded-lg cursor-pointer ${selectedMaterial?.id === material.id ? 'bg-indigo-50 border border-indigo-200' : 'hover:bg-gray-50 border border-gray-100'}`}
                  >
                    <div className="flex items-center">
                      <FileText className="w-5 h-5 text-indigo-600 mr-3" />
                      <span className="font-medium">{material.title}</span>
                    </div>
                    <div className="text-sm text-gray-500 mt-1">
                      {material.file_type.toUpperCase()} â€¢ {new Date(material.uploaded_at).toLocaleDateString()}
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>

          {/* Content Generation Options */}
          <div className="lg:col-span-2">
            <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
              <h2 className="text-xl font-semibold text-gray-800 mb-4">
                {selectedMaterial ? `Generate from "${selectedMaterial.title}"` : "Select a material to generate content"}
              </h2>
              
              {selectedMaterial ? (
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <button
                    onClick={() => generateContent('summary')}
                    className="flex flex-col items-center p-6 border border-gray-200 rounded-xl hover:bg-gray-50 transition-colors"
                  >
                    <div className="p-3 bg-purple-100 rounded-full mb-3">
                      <Sparkles className="w-6 h-6 text-purple-600" />
                    </div>
                    <h3 className="font-medium text-gray-800 mb-1">Summary</h3>
                    <p className="text-sm text-gray-500 text-center">
                      Generate a concise summary of the key points in this material
                    </p>
                  </button>

                  <button
                    onClick={() => generateContent('notes')}
                    className="flex flex-col items-center p-6 border border-gray-200 rounded-xl hover:bg-gray-50 transition-colors"
                  >
                    <div className="p-3 bg-blue-100 rounded-full mb-3">
                      <BookOpen className="w-6 h-6 text-blue-600" />
                    </div>
                    <h3 className="font-medium text-gray-800 mb-1">Study Notes</h3>
                    <p className="text-sm text-gray-500 text-center">
                      Create organized study notes with main concepts and explanations
                    </p>
                  </button>

                  <button
                    onClick={() => generateContent('flashcards')}
                    className="flex flex-col items-center p-6 border border-gray-200 rounded-xl hover:bg-gray-50 transition-colors"
                  >
                    <div className="p-3 bg-green-100 rounded-full mb-3">
                      <FileText className="w-6 h-6 text-green-600" />
                    </div>
                    <h3 className="font-medium text-gray-800 mb-1">Flashcards</h3>
                    <p className="text-sm text-gray-500 text-center">
                      Generate question-answer pairs for effective memorization
                    </p>
                  </button>

                  <button
                    onClick={() => generateContent('quiz')}
                    className="flex flex-col items-center p-6 border border-gray-200 rounded-xl hover:bg-gray-50 transition-colors"
                  >
                    <div className="p-3 bg-yellow-100 rounded-full mb-3">
                      <FileQuestion className="w-6 h-6 text-yellow-600" />
                    </div>
                    <h3 className="font-medium text-gray-800 mb-1">Practice Quiz</h3>
                    <p className="text-sm text-gray-500 text-center">
                      Create a quiz to test your understanding of the material
                    </p>
                  </button>
                </div>
              ) : (
                <div className="text-center py-12 text-gray-500">
                  <Sparkles className="mx-auto w-10 h-10 mb-4 text-gray-300" />
                  <p>Select a study material from the list to generate content</p>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </Layout>
  );
}




